---
import { Button } from "@/components/ui/button";
import "@/global.css";
import Layout from '../layouts/layout.astro';
import fetchApi from "../lib/strapi";

const STRAPI_URL = import.meta.env.STRAPI_URL;

interface Sponsor {
  id: number;
  attributes: {
    Name: string;
    Type: 'Gold' | 'Silver' | 'Bronze' | 'Tech' | 'Community';
    Logo: {
      data: {
        attributes: {
          formats: {
            small: {
              url: string;
            };
          };
        };
      };
    };
  };
}

const index = await fetchApi<any>({
  endpoint: "index?populate=*",
  wrappedByKey: "data",
});

const sponsors = (await fetchApi<any>({
  endpoint: "sponsors?populate=*",
  wrappedByKey: "data",
})) || [];

const sponsorCategories: Record<'Gold' | 'Silver' | 'Bronze' | 'Tech' | 'Community', Sponsor[]> = {
  Gold: [],
  Silver: [],
  Bronze: [],
  Tech: [],
  Community: [],
};

sponsors.forEach((sponsor: Sponsor) => {
  const type = sponsor.attributes.Type;
  if (sponsorCategories[type]) {
    sponsorCategories[type].push(sponsor);
  }
});

// Define paths for singular and plural images
const titleImages: Record<'Gold' | 'Silver' | 'Bronze' | 'Tech' | 'Community', { singular: string; plural: string }> = {
  Gold: {
    singular: '/images/gold-sponsor.png',
    plural: '/images/gold-sponsors.png'
  },
  Silver: {
    singular: '/images/silver-sponsor.png',
    plural: '/images/silver-sponsors.png'
  },
  Bronze: {
    singular: '/images/bronze-sponsor.png',
    plural: '/images/bronze-sponsors.png'
  },
  Tech: {
    singular: '/images/tech-sponsor.png',
    plural: '/images/tech-sponsors.png'
  },
  Community: {
    singular: '/images/community-sponsor.png',
    plural: '/images/community-sponsors.png'
  }
};
---

<Layout title='WDCC' description="The Web Development & Consulting Club @ The University of Auckland">
  <div class="p-8">
    <h1 class="text-4xl font-bold mb-4">Test H1</h1>
    <h2 class="text-3xl font-bold mb-4">Test H2</h2>
    <h3 class="text-2xl font-bold mb-4">Test H3</h3>
    <h4 class="text-xl font-bold mb-4">Test H4</h4>
    <p class="mb-4">Test P</p>
    <p class="text-sm mb-4">Text xs</p>
    <Button>Hello</Button>
  </div>

  <div class="flex items-center p-8">
    <div class="flex-none w-80 flex items-center mr-16 text-blue-600">
      <h2 class="text-left">Supported by our 2024 Sponsors</h2>
    </div>
    <div class="flex-1 flex flex-col gap-8">
      {Object.entries(sponsorCategories).map(([category, sponsors]) => (
        sponsors.length > 0 && (
          <div class="w-full">
            <img
              src={sponsors.length === 1 ? titleImages[category as 'Gold' | 'Silver' | 'Bronze' | 'Tech' | 'Community'].singular : titleImages[category as 'Gold' | 'Silver' | 'Bronze' | 'Tech' | 'Community'].plural}
              alt={`${category} Sponsor`}
              class="block max-w-xs mb-8 mx-0 h-9"
            />
            <div class="flex flex-wrap justify-start gap-8">
              {sponsors.map((sponsor: Sponsor) => (
                <div class="flex flex-col items-center w-36">
                  <div class="flex items-center justify-center w-36 h-20 overflow-hidden">
                    <img src={STRAPI_URL + sponsor.attributes.Logo.data.attributes.formats.small.url} alt={sponsor.attributes.Name} class="max-w-full max-h-full object-contain" />
                  </div>
                </div>
              ))}
            </div>
          </div>
        )
      ))}
    </div>
  </div>
</Layout>
